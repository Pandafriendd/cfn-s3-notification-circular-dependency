Resources:
  MyFuncServiceRole54065130:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkCfns3NotificationConfigurationStack/MyFunc/ServiceRole/Resource
  MyFunc8A243A2C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: boom
      Role:
        Fn::GetAtt:
          - MyFuncServiceRole54065130
          - Arn
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - MyFuncServiceRole54065130
    Metadata:
      aws:cdk:path: CdkCfns3NotificationConfigurationStack/MyFunc/Resource
  S3Bucket2:
    # Circular dependency between resources: [LambdaPermission, S3Bucket2]; 
    DependsOn:    
      - LambdaPermission
    Type: AWS::S3::Bucket
    Properties:
      BucketName: zxcnzxczfsgdjkldfjdrkgthreukgnfjxvfd2222666 
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function:
              Fn::GetAtt:
                - MyFunc8A243A2C
                - Arn
    Metadata:
      aws:cdk:path: CdkCfns3NotificationConfigurationStack/S3Bucket2
  LambdaPermission:
    # Manually let S3 created before lambda permission, then "Unable to validate the following destination configurations"
    #DependsOn:  
      #- S3Bucket2
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MyFunc8A243A2C
          - Arn
      Principal: s3.amazonaws.com
      SourceArn: arn:aws:s3:::zxcnzxczfsgdjkldfjdrkgthreukgnfjxvfd2222666
    Metadata:
      aws:cdk:path: CdkCfns3NotificationConfigurationStack/LambdaPermission
  